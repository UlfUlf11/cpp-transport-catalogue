cmake_minimum_required(VERSION 3.12)
 
project(sprint_15)
set(CMAKE_CXX_STANDARD 17)
 
find_package(Protobuf REQUIRED)
find_package(Threads REQUIRED)
 
protobuf_generate_cpp(PROTO_CPP PROTO_H transport_catalogue.proto 
                                            svg.proto 
                                            map_renderer.proto 
                                            graph.proto 
                                            transport_router.proto)
 
 
add_executable(transport_catalogue main.cpp 
                                   ${PROTO_CPP} 
                                   ${PROTO_H} 
                                   "main.cpp" 
                                   "domain.h" 
                                   "domain.cpp" 
                                   "geo.cpp" 
                                   "geo.h" 
                                   "graph.h" 
                                   "json_builder.cpp" 
                                   "json_builder.h" 
                                   "json_reader.cpp" 
                                   "json_reader.h" 
                                   "json.cpp" 
                                   "json.h" 
                                   "map_renderer.cpp" 
                                   "map_renderer.h" 
                                   "ranges.h" 
                                   "request_handler.cpp" 
                                   "request_handler.h" 
                                   "router.h" 
                                   "serialization.cpp" 
                                   "serialization.h" 
                                   "svg.cpp" 
                                   "svg.h" 
                                   "transport_catalogue.cpp" 
                                   "transport_catalogue.h" 
                                   "transport_router.cpp" 
                                   "transport_router.h")
 
target_include_directories(transport_catalogue PUBLIC ${Protobuf_INCLUDE_DIRS})
target_include_directories(transport_catalogue PUBLIC ${CMAKE_CURRENT_BINARY_DIR})
target_link_libraries(transport_catalogue "$<IF:$<CONFIG:Debug>,${Protobuf_LIBRARY_DEBUG},${Protobuf_LIBRARY}>" Threads::Threads)